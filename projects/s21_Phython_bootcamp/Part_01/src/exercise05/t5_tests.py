from task5 import s21_float
import pytest

def run_tests():
    # Тестовые случаи для корректных вещественных чисел
    correct_cases = [
        ("123", 123.0),          # целое число
        ("-123", -123.0),        # отрицательное целое
        ("123.456", 123.456),    # с точкой
        ("123,456", 123.456),    # с запятой
        ("-123.456", -123.456),  # отрицательное с точкой
        ("-123,456", -123.456),  # отрицательное с запятой
        ("0.0", 0.0),            # ноль с дробной частью
        ("0,0", 0.0),            # ноль с запятой
        (".123", 0.123),         # без целой части с точкой
        (",123", 0.123),         # без целой части с запятой
        ("-.123", -0.123),       # отрицательное без целой части с точкой
        ("-,123", -0.123),       # отрицательное без целой части с запятой
        ("123.", 123.0),         # точка в конце
        ("123,", 123.0),         # запятая в конце
        (" 123.456 ", 123.456),  # с пробелами
        (" -123,456 ", -123.456),# отрицательное с пробелами
        ("1e10", 1e10),          # экспоненциальная запись
        ("1.23e-5", 1.23e-5),    # экспоненциальная запись с отрицательным показателем
        ("1,23e5", 1.23e5),      # экспоненциальная запись с запятой
        ("-1.23e-10", -1.23e-10),# отрицательное с экспоненциальной записью
        ("1e3", 1e3),            # экспоненциальная запись
        ("2.5e-6", 2.5e-6),      # экспоненциальная запись с дробной частью
        ("-3,75E+8", -3.75e8),   # отрицательное с экспоненциальной записью и запятой
        ("4e0", 4.0),            # экспоненциальная запись с нулевым показателем
        ("123. ", 123.0),        # питон автоматически преобразует числа без нуля после точки в правильную форму
    ]

    # Тестовые случаи для некорректных вещественных чисел
    incorrect_cases = [
        "",             # пустая строка
        "abc",          # буквы
        "12a.34",       # буквы среди цифр
        "12,34,56",    # две запятые
        "12.34.56",     # две точки
        ".",            # только точка
        ",",            # только запятая
        "--123",        # два минуса
        "12..34",       # две точки подряд
        "12,,34",       # две запятые подряд
        "12,34.56",     # запятая и точка
        " ",            # пробел
        "12 34",        # число с пробелом
        "12$34",        # специальные символы
        "12@34.5",     # специальные символы
        "12$34,5",     # специальные символы
        "e5",          # некорректная экспоненциальная запись
        "1e5.5",       # некорректная экспоненциальная запись
        "1,5e",        # некорректная экспоненциальная запись
        "1e5e5",       # некорректная экспоненциальная запись
        "12#34",       # специальные символы
        "12@34.5",    # специальные символы
        "12$34,5",    # специальные символы
        "--12.34",     # множественные минусы
        "-12-.34",     # множественные минусы
        "12--34",      # множественные минусы
        "+-5",         # множественные знаки
        "-+5",         # множественные знаки
        "-",           # неполная запись
        "+e5",         # неполная запись
        "123e",        # неполная запись
    ]

    # Счетчики для статистики
    total_tests = len(correct_cases) + len(incorrect_cases)
    passed_tests = 0

    print("Тестирование корректных случаев:")
    for test_input, expected_output in correct_cases:
        try:
            result = s21_float(test_input)
            if result == expected_output:
                passed_tests += 1
                print(f"✓ {test_input} -> {result} (ожидалось {expected_output})")
            else:
                print(f"✗ Тест не пройден для: {test_input} -> {result} (ожидалось {expected_output})")
                choice = input("Нажмите Enter для остановки, любой другой символ для продолжения: ")
                if choice == "":
                    print(f"Тестирование остановлено. Пройдено {passed_tests} из {total_tests} тестов")
                    return
        except ValueError:
            print(f"✗ Тест не пройден для: {test_input} -> Выброшено исключение (ожидалось {expected_output})")
            choice = input("Нажмите Enter для остановки, любой другой символ для продолжения: ")
            if choice == "":
                print(f"Тестирование остановлено. Пройдено {passed_tests} из {total_tests} тестов")
                return

    print("\nТестирование некорректных случаев:")
    for test_input in incorrect_cases:
        try:
            result = s21_float(test_input)
            print(f"✗ Тест не пройден для: {test_input} -> {result} (ожидалось исключение ValueError)")
            choice = input("Нажмите Enter для остановки, любой другой символ для продолжения: ")
            if choice == "":
                print(f"Тестирование остановлено. Пройдено {passed_tests} из {total_tests} тестов")
                return
        except ValueError:
            passed_tests += 1
            print(f"✓ {test_input} -> Выброшено исключение (ожидалось)")

    print(f"\nТестирование завершено успешно! Пройдено {passed_tests} из {total_tests} тестов")

if __name__ == "__main__":
    run_tests()